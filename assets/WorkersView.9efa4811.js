import{_ as b,q as _,a as i,c as a,h as F,s as M,v as f,t as u,e as s,n as R,p as L,l as z,g as y,a9 as N,ac as O,F as h,f as w,y as H,z as g,C as W,H as C,r as B,m as A,ad as j,u as I,ae as q,af as U}from"./index.ef21516a.js";import{d as P,W as D,c as J,u as T,w as V,_ as $,T as K,i as G}from"./StatusFilterBar.bc457747.js";import{u as E,N as Q,U as X}from"./UpdateListener.8db9cd8c.js";const Y=f(") "),Z={key:1},ee={props:["workerTask"],setup(e){return(t,r)=>{const d=_("router-link");return i(),a("span",null,[e.workerTask?(i(),F(d,{key:0,to:{name:"jobs",params:{jobID:e.workerTask.job_id,taskID:e.workerTask.id}}},{default:M(()=>[f(u(e.workerTask.name)+" (",1),s("span",{class:R(["status-label","status-"+e.workerTask.status])},u(e.workerTask.status),3),Y]),_:1},8,["to"])):(i(),a("span",Z,"-"))])}}};var te=b(ee,[["__scopeId","data-v-86fb866e"]]);const se=e=>(L("data-v-5b855839"),e=e(),z(),e),re=["title"],oe={class:"switch"},ie=["checked"],le=se(()=>s("span",{class:"slider round"},null,-1)),ae={class:"switch-label"},ne={props:["isChecked","label","title"],setup(e){return(t,r)=>(i(),a("label",{title:e.title},[s("span",oe,[s("input",{type:"checkbox",checked:e.isChecked,onChange:r[0]||(r[0]=d=>t.$emit("switchToggle"))},null,40,ie),le]),s("span",ae,u(e.label),1)],8,re))}};var ce=b(ne,[["__scopeId","data-v-5b855839"]]);const de={props:["workerData"],components:{LinkWorkerTask:te,SwitchCheckbox:ce},data(){return{datetime:P,api:new D(y()),workerStatusHTML:"",workerSleepSchedule:this.defaultWorkerSleepSchedule(),isScheduleEditing:!1,notifs:E(),copyElementText:J,workers:T(),thisWorkerClusters:{}}},mounted(){window.workerDetailsVue=this,this.workers.refreshClusters().catch(e=>{const t=JSON.stringify(e);this.notifs.add(`Error: ${t}`)})},watch:{workerData(e,t){e?this.workerStatusHTML=V(e):this.workerStatusHTML="",(t&&e&&t.id!=e.id||!t&&e)&&this.fetchWorkerSleepSchedule(),this.updateThisWorkerClusters(e)}},computed:{hasWorkerData(){return!!this.workerData&&!!this.workerData.id},workerSleepScheduleFormatted(){return{days_of_week:this.workerSleepSchedule.days_of_week===""?"every day":this.workerSleepSchedule.days_of_week,start_time:this.workerSleepSchedule.start_time===""?"00:00":this.workerSleepSchedule.start_time,end_time:this.workerSleepSchedule.end_time===""?"24:00":this.workerSleepSchedule.end_time}},workerSleepScheduleStatusLabel(){return this.workerSleepSchedule.is_active?"Enabled":"Disabled"},hasClustersAssigned(){const e=this.getAssignedClusterIDs();return e&&e.length>0}},methods:{fetchWorkerSleepSchedule(){this.api.fetchWorkerSleepSchedule(this.workerData.id).then(e=>{e?this.workerSleepSchedule=e:this.workerSleepSchedule=this.defaultWorkerSleepSchedule()}).catch(e=>{const t=JSON.stringify(e);this.notifs.add(`Error: ${t}`)})},setWorkerSleepSchedule(e){this.api.setWorkerSleepSchedule(this.workerData.id,this.workerSleepSchedule).then(this.notifs.add(e))},toggleWorkerSleepSchedule(){this.workerSleepSchedule.is_active=!this.workerSleepSchedule.is_active;let e=this.workerSleepScheduleStatusLabel;this.setWorkerSleepSchedule(`${e} schedule for worker ${this.workerData.name}`)},saveWorkerSleepSchedule(){this.setWorkerSleepSchedule(`Updated schedule for worker ${this.workerData.name}`),this.isScheduleEditing=!1},cancelEditWorkerSleepSchedule(){this.fetchWorkerSleepSchedule(),this.isScheduleEditing=!1},defaultWorkerSleepSchedule(){return new N(!1,"","","")},deleteWorker(){let e=`Are you sure you want to remove ${this.workerData.name}?`;this.workerData.status!="offline"&&(e+=`
Removing it without first shutting it down will cause it to log errors.`),confirm(e)&&this.api.deleteWorker(this.workerData.id)},updateThisWorkerClusters(e){if(!e||!e.clusters){this.thisWorkerClusters={};return}const t=e.clusters.reduce((r,d)=>(r[d.id]=!0,r),{});this.thisWorkerClusters=t},toggleWorkerCluster(e){console.log("Toggled",e),this.thisWorkerClusters[e]=!this.thisWorkerClusters[e],console.log("New assignment:",plain(this.thisWorkerClusters));const t=this.getAssignedClusterIDs(),r=new O(t);this.api.setWorkerClusters(this.workerData.id,r).then(()=>{this.notifs.add("Cluster assignment updated")}).catch(d=>{const o=JSON.stringify(d);this.notifs.add(`Error: ${o}`)})},getAssignedClusterIDs(){const e=[];for(let t in this.thisWorkerClusters)this.thisWorkerClusters[t]&&e.push(t);return e}}},c=e=>(L("data-v-7d6fd9e4"),e=e(),z(),e),ue=c(()=>s("h2",{class:"column-title"},"Worker Details",-1)),he=c(()=>s("dt",{class:"field-id"},"ID",-1)),ke=c(()=>s("dt",{class:"field-name"},"Name",-1)),_e=c(()=>s("dt",{class:"field-status"},"Status",-1)),we=["innerHTML"],fe=c(()=>s("dt",{class:"field-last_seen"},"Last Seen",-1)),Se={key:0},pe={key:1},me=c(()=>s("dt",{class:"field-version"},"Version",-1)),ge={title:"Version of Flamenco"},be=c(()=>s("dt",{class:"field-ip_address"},"IP Addr",-1)),ve=c(()=>s("dt",{class:"field-platform"},"Platform",-1)),We=c(()=>s("dt",{class:"field-supported_task_types"},"Task Types",-1)),ye=c(()=>s("dt",{class:"field-task"},"Last Task",-1)),De={key:0,class:"worker-clusters"},Te=c(()=>s("h3",{class:"sub-title"},"Clusters",-1)),Ce={key:0,class:"hint"},Ie={key:1,class:"hint"},Ee={class:"sub-title"},xe=f(" Sleep Schedule "),Ae={key:0,class:"sub-title-buttons"},Re=c(()=>s("p",null,"Time of the day (and on which days) this worker should go to sleep. ",-1)),Le={key:0,class:"sleep-schedule-edit"},ze=c(()=>s("label",null,"Days of the week",-1)),He=c(()=>s("span",{class:"input-help-text"}," Write each day name using their first two letters, separated by spaces. (e.g. mo tu we th fr) ",-1)),Ve={class:"sleep-schedule-edit-time"},Fe=c(()=>s("label",null,"Start Time",-1)),Me=c(()=>s("label",null,"End Time",-1)),Ne=c(()=>s("span",{class:"input-help-text"}," Use 24-hour format. ",-1)),Oe={class:"btn-bar-group"},Be={class:"btn-bar"},je={key:1},qe=c(()=>s("dt",null,"Status",-1)),Ue=c(()=>s("dt",null,"Days of Week",-1)),Pe=c(()=>s("dt",null,"Start Time",-1)),Je=c(()=>s("dt",null,"End Time",-1)),$e={class:"worker-maintenance"},Ke=c(()=>s("h3",{class:"sub-title"},"Maintenance",-1)),Ge={class:"worker-status"},Qe=f(", which means "),Xe=f("can be safely removed."),Ye=f("removing it now can cause the Worker to log errors. It is adviced to shut down the Worker before removing it from the system."),Ze=c(()=>s("p",{class:"hint"}," When a Worker is removed from the system, any active task still assigned to it will be requeued. Restarting the Worker after removing it from the system will simply register it anew. ",-1)),et={key:1,class:"details-no-item-selected"},tt=c(()=>s("p",null,"Select a worker to see its details.",-1)),st=[tt];function rt(e,t,r,d,o,n){const k=_("link-worker-task"),S=_("switch-checkbox");return i(),a(h,null,[ue,n.hasWorkerData?(i(),a(h,{key:0},[s("dl",null,[he,s("dd",null,[s("span",{onClick:t[0]||(t[0]=(...l)=>o.copyElementText&&o.copyElementText(...l)),class:"click-to-copy"},u(r.workerData.id),1)]),ke,s("dd",null,u(r.workerData.name),1),_e,s("dd",{innerHTML:o.workerStatusHTML},null,8,we),fe,r.workerData.last_seen?(i(),a("dd",Se,u(o.datetime.relativeTime(r.workerData.last_seen)),1)):(i(),a("dd",pe,"never")),me,s("dd",ge,u(r.workerData.version),1),be,s("dd",null,[s("span",{onClick:t[1]||(t[1]=(...l)=>o.copyElementText&&o.copyElementText(...l)),class:"click-to-copy"},u(r.workerData.ip_address),1)]),ve,s("dd",null,u(r.workerData.platform),1),We,s("dd",null,u(r.workerData.supported_task_types.join(", ")),1),ye,s("dd",null,[w(k,{workerTask:r.workerData.task},null,8,["workerTask"])])]),o.workers.clusters&&o.workers.clusters.length?(i(),a("section",De,[Te,s("ul",null,[(i(!0),a(h,null,H(o.workers.clusters,l=>(i(),a("li",null,[w(S,{isChecked:o.thisWorkerClusters[l.id],label:l.name,title:l.description,onSwitchToggle:p=>n.toggleWorkerCluster(l.id)},null,8,["isChecked","label","title","onSwitchToggle"])]))),256))]),n.hasClustersAssigned?(i(),a("p",Ce," This worker will only pick up jobs assigned to one of its clusters, and clusterless jobs. ")):(i(),a("p",Ie," This worker will only pick up clusterless jobs. "))])):g("",!0),s("section",{class:R(["sleep-schedule",{"is-schedule-active":o.workerSleepSchedule.is_active}])},[s("h3",Ee,[w(S,{isChecked:o.workerSleepSchedule.is_active,onSwitchToggle:n.toggleWorkerSleepSchedule},null,8,["isChecked","onSwitchToggle"]),xe,o.isScheduleEditing?g("",!0):(i(),a("div",Ae,[s("button",{onClick:t[2]||(t[2]=l=>o.isScheduleEditing=!0)},"Edit")]))]),Re,o.isScheduleEditing?(i(),a("div",Le,[s("div",null,[ze,W(s("input",{type:"text",placeholder:"mo tu we th fr","onUpdate:modelValue":t[3]||(t[3]=l=>o.workerSleepSchedule.days_of_week=l)},null,512),[[C,o.workerSleepSchedule.days_of_week]]),He]),s("div",Ve,[s("div",null,[Fe,W(s("input",{type:"text",placeholder:"09:00","onUpdate:modelValue":t[4]||(t[4]=l=>o.workerSleepSchedule.start_time=l),class:"time"},null,512),[[C,o.workerSleepSchedule.start_time]])]),s("div",null,[Me,W(s("input",{type:"text",placeholder:"18:00","onUpdate:modelValue":t[5]||(t[5]=l=>o.workerSleepSchedule.end_time=l),class:"time"},null,512),[[C,o.workerSleepSchedule.end_time]])])]),Ne,s("div",Oe,[s("div",Be,[o.isScheduleEditing?(i(),a("button",{key:0,onClick:t[6]||(t[6]=(...l)=>n.cancelEditWorkerSleepSchedule&&n.cancelEditWorkerSleepSchedule(...l)),class:"btn"},"Cancel")):g("",!0),o.isScheduleEditing?(i(),a("button",{key:1,onClick:t[7]||(t[7]=(...l)=>n.saveWorkerSleepSchedule&&n.saveWorkerSleepSchedule(...l)),class:"btn btn-primary"},"Save Schedule")):g("",!0)])])])):g("",!0),o.isScheduleEditing?g("",!0):(i(),a("dl",je,[qe,s("dd",null,u(n.workerSleepScheduleStatusLabel),1),Ue,s("dd",null,u(n.workerSleepScheduleFormatted.days_of_week),1),Pe,s("dd",null,u(n.workerSleepScheduleFormatted.start_time),1),Je,s("dd",null,u(n.workerSleepScheduleFormatted.end_time),1)]))],2),s("section",$e,[Ke,s("p",null,[f(u(r.workerData.name)+" is ",1),s("span",Ge,u(r.workerData.status),1),Qe,r.workerData.status=="offline"?(i(),a(h,{key:0},[Xe],64)):(i(),a(h,{key:1},[Ye],64))]),s("p",null,[s("button",{onClick:t[8]||(t[8]=(...l)=>n.deleteWorker&&n.deleteWorker(...l))},"Remove "+u(r.workerData.name),1)]),Ze])],64)):(i(),a("div",et,st))],64)}var ot=b(de,[["render",rt],["__scopeId","data-v-7d6fd9e4"]]);const it={value:"",selected:""},lt=f("Select a Worker"),at=f("Choose an action..."),nt=["value"],ct=["disabled","onClick"],dt={setup(e){const t=Object.freeze({offline_lazy:{label:"Shut Down (after task is finished)",icon:"\u271D",title:"Shut down the worker after the current task finishes. The worker may automatically restart.",target_status:"offline",lazy:!0},offline_immediate:{label:"Shut Down (immediately)",icon:"\u271D!",title:"Immediately shut down the worker. It may automatically restart.",target_status:"offline",lazy:!1},asleep_lazy:{label:"Send to Sleep (after task is finished)",icon:"\u{1F634}",title:"Let the worker sleep after finishing this task.",target_status:"asleep",lazy:!0},asleep_immediate:{label:"Send to Sleep (immediately)",icon:"\u{1F634}!",title:"Let the worker sleep immediately.",target_status:"asleep",lazy:!1},wakeup:{label:"Wake Up",icon:"\u{1F603}",title:"Wake the worker up. A sleeping worker can take a minute to respond.",target_status:"awake",lazy:!1}}),r=B(""),d=T(),o=A(()=>!!d.activeWorkerID),n=A(()=>o&&!!r.value),k=E();function S(){const l=d.activeWorkerID;if(!l){k.add("Select a Worker before applying an action.");return}const p=new D(y()),m=t[r.value],v=new U(m.target_status,m.lazy);console.log("Requesting worker status change",v),p.requestWorkerStatusChange(l,v).then(x=>k.add(`Worker status change to ${m.target_status} confirmed.`)).catch(x=>k.add(`Error requesting worker status change: ${x}`))}return(l,p)=>(i(),a(h,null,[W(s("select",{"onUpdate:modelValue":p[0]||(p[0]=m=>r.value=m)},[s("option",it,[I(o)?(i(),a(h,{key:1},[at],64)):(i(),a(h,{key:0},[lt],64))]),(i(!0),a(h,null,H(I(t),(m,v)=>(i(),a("option",{value:v},u(m.label),9,nt))),256))],512),[[j,r.value]]),s("button",{disabled:!I(n),class:"btn",onClick:q(S,["prevent"])},"Apply",8,ct)],64))}},ut={name:"WorkersTable",props:["activeWorkerID"],emits:["tableRowClicked"],components:{StatusFilterBar:$,WorkerActionsBar:dt},data:()=>({workers:T(),shownStatuses:[],availableStatuses:[]}),mounted(){window.workersTableVue=this;const e=this,t={columns:[{title:"Status",field:"status",sorter:"string",formatter:r=>{const d=r.getData(),o=G(d.status,"worker-"),n=V(d);return`${o} ${n}`}},{title:"Name",field:"name",sorter:"string"},{title:"Version",field:"version",sorter:"string"}],rowFormatter(r){const o=r.getData().id===e.activeWorkerID;r.getElement().classList.toggle("active-row",o)},initialSort:[{column:"name",dir:"asc"}],layout:"fitData",layoutColumnsOnNewData:!0,height:"360px",data:[],selectable:!1};this.tabulator=new K("#flamenco_workers_list",t),this.tabulator.on("rowClick",this.onRowClick),this.tabulator.on("tableBuilt",this._onTableBuilt),window.addEventListener("resize",this.recalcTableHeight)},unmounted(){window.removeEventListener("resize",this.recalcTableHeight)},watch:{activeWorkerID(e,t){this._reformatRow(t),this._reformatRow(e)},availableStatuses(){this.$nextTick(this.recalcTableHeight)}},computed:{selectedIDs(){return this.tabulator.getSelectedData().map(e=>e.id)}},methods:{onReconnected(){this.fetchAllWorkers()},sortData(){const e=this.tabulator;e.setSort(e.getSorters())},_onTableBuilt(){this.tabulator.setFilter(this._filterByStatus),this.fetchAllWorkers()},fetchAllWorkers(){new D(y()).fetchWorkers().then(this.onWorkersFetched,function(t){console.error(t)})},onWorkersFetched(e){this.tabulator.setData(e.workers),this._refreshAvailableStatuses(),this.recalcTableHeight()},processWorkerUpdate(e){if(!this.tabulator.initialized)return;const t=this.tabulator.rowManager.findRow(e.id);let r;t?e.deleted_at?r=t.delete():(e.status_change||(e.status_change=null),r=this.tabulator.updateData([e]),r.then(()=>t.reinitialize(!0))):r=this.tabulator.addData([e]),r.then(this.sortData).then(()=>{this.tabulator.redraw()}).then(this._refreshAvailableStatuses)},onRowClick(e,t){const r=plain(t.getData());this.$emit("tableRowClicked",r)},toggleStatusFilter(e){const t=new Set(this.shownStatuses);t.delete(e)||t.add(e),this.shownStatuses=Array.from(t).sort(),this.tabulator.refreshFilter()},_filterByStatus(e){return this.shownStatuses.length==0?!0:this.shownStatuses.indexOf(e.status)>=0},_refreshAvailableStatuses(){const e=new Set;for(let t of this.tabulator.getData())e.add(t.status);this.availableStatuses=Array.from(e).sort()},_reformatRow(e){const t=this.tabulator.rowManager.findRow(e);!t||(t.reformat?t.reformat():t.reinitialize&&t.reinitialize(!0))},recalcTableHeight(){if(!this.tabulator.initialized)return;const t=this.tabulator.element.parentElement,r=t.parentElement;if(!r)return;const d=r.clientHeight-12;if(t.offsetParent!=t.parentElement){console.warn("JobsTable.recalcTableHeight() only works when the offset parent is the real parent of the element.");return}const o=d-t.offsetTop;this.tabulator.setHeight(o)}}},ht=s("h2",{class:"column-title"},"Workers",-1),kt={class:"btn-bar-group"},_t={class:"align-right"},wt=s("div",null,[s("div",{class:"workers-list with-clickable-row",id:"flamenco_workers_list"})],-1);function ft(e,t,r,d,o,n){const k=_("worker-actions-bar"),S=_("status-filter-bar");return i(),a(h,null,[ht,s("div",kt,[w(k),s("div",_t,[w(S,{availableStatuses:e.availableStatuses,activeStatuses:e.shownStatuses,classPrefix:"worker-",onClick:n.toggleStatusFilter},null,8,["availableStatuses","activeStatuses","onClick"])])]),wt],64)}var St=b(ut,[["render",ft]]);const pt={name:"WorkersView",props:["workerID"],components:{NotificationBar:Q,UpdateListener:X,WorkerDetails:ot,WorkersTable:St},data:()=>({workers:T(),notifs:E(),api:new D(y())}),mounted(){window.workersView=this,this._fetchWorker(this.workerID),document.body.classList.add("is-two-columns")},unmounted(){document.body.classList.remove("is-two-columns")},watch:{workerID(e,t){this._fetchWorker(e)}},methods:{onSIOReconnected(){this.$refs.workersTable.onReconnected(),this._fetchWorker(this.workerID)},onSIODisconnected(e){},onSIOWorkerUpdate(e){if(this.notifs.addWorkerUpdate(e),this.$refs.workersTable&&this.$refs.workersTable.processWorkerUpdate(e),this.workerID==e.id){if(e.deleted_at){this._routeToWorker("");return}this._fetchWorker(this.workerID)}},onTableWorkerClicked(e){e.id!=this.workerID&&this._routeToWorker(e.id)},_routeToWorker(e){const t={name:"workers",params:{workerID:e}};this.$router.push(t)},_fetchWorker(e){if(!e){this.workers.deselectAllWorkers();return}return this.api.fetchWorker(e).then(t=>this.workers.setActiveWorker(t))}}},mt={class:"col col-workers-list"},gt={class:"col col-workers-details"},bt={class:"app-footer"};function vt(e,t,r,d,o,n){const k=_("workers-table"),S=_("worker-details"),l=_("notification-bar"),p=_("update-listener");return i(),a(h,null,[s("div",mt,[w(k,{ref:"workersTable",activeWorkerID:r.workerID,onTableRowClicked:n.onTableWorkerClicked},null,8,["activeWorkerID","onTableRowClicked"])]),s("div",gt,[w(S,{workerData:e.workers.activeWorker},null,8,["workerData"])]),s("footer",bt,[w(l),w(p,{ref:"updateListener",mainSubscription:"allWorkers",onWorkerUpdate:n.onSIOWorkerUpdate,onSioReconnected:n.onSIOReconnected,onSioDisconnected:n.onSIODisconnected},null,8,["onWorkerUpdate","onSioReconnected","onSioDisconnected"])])],64)}var Tt=b(pt,[["render",vt],["__scopeId","data-v-6961a11e"]]);export{Tt as default};
